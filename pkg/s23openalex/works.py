import requests
import time
import bibtexparser

class Works:
    def __init__(self, oaid):
        self.oaid = oaid
        self.req = requests.get(f'https://api.openalex.org/works/{oaid}')
        self.data = self.req.json()
    
    @property
    def bibtex(self):
        _authors = [au['author']['display_name'] for au in self.data['authorships']]
        if len(_authors) == 1:
            authors = _authors[0]
        else:
            authors = ', '.join(_authors)
            
        # id should be generated by the parser, here I use the last name of the first author and the publication year
        id = _authors[0].split()[-1] + '_' + str(self.data['publication_year'])
        
        
        db = bibtexparser.bibdatabase.BibDatabase
        db.entries = [{'year': str(self.data['publication_year']),
                       'volume': self.data['biblio']['volume'],
                       'url': self.data['doi'],
                       'title': self.data['title'],
                       'pages': '-'.join([self.data['biblio']['first_page'], self.data['biblio']['last_page']]),
                       'number': self.data['biblio']['issue'],
                       'journal': self.data['host_venue']['display_name'],
                       'doi': self.data['doi'].replace("https://doi.org/", ""),
                       'author': authors,
                       'ENTRYTYPE': 'article',
                       'ID': id}]
        db.comments = []
        db.strings={}
        db.preambles=[]
        
        bibtex_str = bibtexparser.dumps(db)
        
        print(bibtex_str)
